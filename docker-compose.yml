version: "3.4"
services:
  kas-web:
    container_name: kas
    image: kas:latest
    build:
      context: .
      dockerfile: docker/Dockerfile.kas
    depends_on:
      - postgres
    ports:
      - "8000:8000"
    env_file:
      - ./dev-environment/kas.env
    volumes:
      - ./kas/:/app
      - ./data/kas:/srv/media
    environment:
      - MAKE_MIGRATIONS=true
      - MIGRATE=true
      - DUMMYDATA=true
      - CREATE_USERS=true
      - TEST=true
    command: gunicorn -b 0.0.0.0:8000 project.wsgi:application --reload -w 1 --access-logfile - --error-logfile - --capture-output # reload on code changes

  worker:
    #add more containers like this to add more workers
    container_name: worker-one
    image: kas:latest
    depends_on:
      - postgres
      - redis
    env_file:
      - ./dev-environment/kas.env
    volumes:
      - ./kas/:/app
      - ./data/kas:/srv/media
    command: python manage.py rqworker high default low # listening on all three queues by default


  postgres:
    container_name: kas-db
    image: postgres:13
    ports:
      # expose to localhost for easier debugging
      - "5432:5432"
    env_file:
      - ./dev-environment/kas.env
    volumes:
      - kas-postgres-data:/var/lib/postgresql/data
      - ./dev-environment/postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql

  redis:
    container_name: redis
    image: redis:6.0
    ports:
      - "6379:6379"

  selvbetjening:
    container_name: kas-selvbetjening
    build:
      context: .
      dockerfile: docker/Dockerfile.selvbetjening
    depends_on:
      - postgres
    ports:
      - "8080:8000"
    env_file:
      - ./dev-environment/selvbetjening.env
    volumes:
      - ./selvbetjening:/app
    environment:
      - MAKE_MIGRATIONS=true
      - MIGRATE=true
    command: bash -c "
        django-admin compilemessages &&
        gunicorn -b 0.0.0.0:8000 project.wsgi:application --reload -w 1 --access-logfile - --error-logfile - --capture-output
      "

volumes:
  kas-postgres-data:
