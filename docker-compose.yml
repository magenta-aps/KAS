version: "3.4"
services:
  kas-web:
    user: "1000:1000"  # Override in docker-compose.override.yml if your local user is different
    container_name: kas
    image: kas:latest
    build:
      context: .
      dockerfile: docker/Dockerfile.kas
    depends_on:
      - postgres
    # Test-idp needs for adresses to endpoints to be the same from the perspective
    # of the test-idp container and for the client (which means accessing 'localhost' adresses always)
    # This means that all containers should run in "host" network mode, and should conflict
    # with each others' ports
    network_mode: "host"
    env_file:
      - ./dev-environment/kas.env
    volumes:
      - ./kas/:/app
      - ./data/kas:/srv/media
      - ./data/er/er_html:/app/kas/static/doc/er_html:ro
    environment:
      - MAKE_MIGRATIONS=true
      - MIGRATE=true
      # Set this to "DUMMYDATA=" in override file if you do not want dummy data
      - DUMMYDATA=true
      - CREATE_USERS=true
      - CREATE_DUMMY_USERS=true
      - TEST=true
    command: gunicorn -b 0.0.0.0:8000 project.wsgi:application --reload -w 1 --access-logfile - --error-logfile - --capture-output # reload on code changes

  kas-cron:
    user: "1000:1000"  # Override in docker-compose.override.yml if your local user is different
    container_name: kas-cron
    image: kas:latest
    depends_on:
      - postgres
      - redis
    network_mode: "host"
    env_file:
      - ./dev-environment/kas.env
    volumes:
      - ./kas/:/app
      - ./data/kas:/srv/media
      - ./dev-environment/crontab:/crontab
    entrypoint: [ ]
    command: [ "supercronic", "/crontab" ]

  worker:
    user: "1000:1000"  # Override in docker-compose.override.yml if your local user is different
    #add more containers like this to add more workers
    container_name: worker-one
    image: kas:latest
    network_mode: "host"
    depends_on:
      - postgres
      - redis
    env_file:
      - ./dev-environment/kas.env
    volumes:
      - ./kas/:/app
      - ./data/kas:/srv/media
      
    # Note: Don't use "devrqworker" in production. Use the "rqworker" command instead
    # "devrqworker" reloads automatically on code-changes and eats a lot of memory.
    # See https://github.com/rq/rq/issues/2 for details
    command: python manage.py devrqworker high default low # listening on all three queues by default


  postgres:
    # Do not set `user` here
    container_name: kas-db
    image: postgres:13
    network_mode: "host"
    env_file:
      - ./dev-environment/kas.env
    volumes:
      - kas-postgres-data:/var/lib/postgresql/data
      - ./dev-environment/postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql

  redis:
    container_name: redis
    image: redis:6.0
    network_mode: "host"

  selvbetjening:
    user: "1000:1000"  # Override in docker-compose.override.yml if your local user is different
    container_name: kas-selvbetjening
    build:
      context: .
      dockerfile: docker/Dockerfile.selvbetjening
    depends_on:
      - postgres
    network_mode: "host"
    env_file:
      - ./dev-environment/selvbetjening.env
    volumes:
      - ./selvbetjening:/app
      - ./dev-environment/cert:/ssl:ro
    environment:
      - MAKE_MIGRATIONS=true
      - MIGRATE=true
    command: bash -c "
        django-admin compilemessages &&
        gunicorn -b 0.0.0.0:8040 project.wsgi:application --reload -w 1 --access-logfile - --error-logfile - --capture-output
      "

  kas-test-idp:
    user: "1000:1000"  # Override in docker-compose.override.yml if your local user is different
    image: kenchan0130/simplesamlphp
    container_name: kas-test-idp
    network_mode: "host"
    environment:
      SIMPLESAMLPHP_SP_ENTITY_ID: http://localhost:8040/saml/metadata/
      SIMPLESAMLPHP_SP_ASSERTION_CONSUMER_SERVICE: http://localhost:8040/login/callback/
      SIMPLESAMLPHP_SP_SINGLE_LOGOUT_SERVICE: http://localhost:8040/logout/callback/
      SIMPLESAMLPHP_IDP_CERTIFICATE: /var/www/simplesamlphp/cert/selfsigned.crt
      SIMPLESAMLPHP_IDP_PRIVATEKEY: /var/www/simplesamlphp/cert/selfsigned.key

    volumes:
      - ./dev-environment/cert/idp/selfsigned.crt:/var/www/simplesamlphp/cert/server.crt:ro
      - ./dev-environment/cert/idp/selfsigned.key:/var/www/simplesamlphp/cert/server.pem:ro
      - ./dev-idp/authsources.php:/var/www/simplesamlphp/config/authsources.php:ro
      - ./dev-idp/saml20-sp-remote.php:/var/www/simplesamlphp/metadata/saml20-sp-remote.php:ro

  kas-er:
    user: "1000:1000"  # Override in docker-compose.override.yml if your local user is different
    container_name: kas-er
    image: kas-er:latest
    build:
      context: .
      dockerfile: docker/Dockerfile.er
    depends_on:
      - postgres
    network_mode: "host"
    env_file:
      - ./dev-environment/kas.env
    volumes:
      - ./data/er:/doc

volumes:
  kas-postgres-data:
