services:
  kas-admin:
    user: "1000:1000"  # Override in docker-compose.override.yml if your local user is different
    container_name: kas-admin
    image: kas:latest
    build:
      context: .
      dockerfile: docker/Dockerfile.kas
    depends_on:
      - kas-db
    ports:
      - "8020:8000"
    networks:
      - default
      - database
      - worker
    env_file:
      - ./dev-environment/kas.env
    volumes:
      - ./kas/:/app
      - ./data/kas:/srv/media
      - ./data/er/er_html:/app/static/kas/doc/er_html:ro
    environment:
      - MAKE_MIGRATIONS=true
      - MIGRATE=true
      # Set this to "DUMMYDATA=" in override file if you do not want dummy data
      - DUMMYDATA=true
      - CREATE_USERS=true
      - CREATE_DUMMY_USERS=true
      - TEST=false
    command: gunicorn -b 0.0.0.0:8000 project.wsgi:application --reload -w 1 --access-logfile - --error-logfile - --capture-output # reload on code changes

  kas-cron:
    user: "1000:1000"  # Override in docker-compose.override.yml if your local user is different
    container_name: kas-cron
    image: kas:latest
    depends_on:
      - kas-db
      - redis
    env_file:
      - ./dev-environment/kas.env
    networks:
      - database
    volumes:
      - ./kas/:/app
      - ./data/kas:/srv/media
      - ./dev-environment/crontab:/crontab
    entrypoint: [ ]
    command: [ "supercronic", "/crontab" ]
    pull_policy: build

  worker:
    user: "1000:1000"  # Override in docker-compose.override.yml if your local user is different
    #add more containers like this to add more workers
    container_name: worker-one
    image: kas:latest
    depends_on:
      - kas-db
      - redis
    networks:
      - worker
      - database
    env_file:
      - ./dev-environment/kas.env
    volumes:
      - ./kas/:/app
      - ./data/kas:/srv/media
      
    # Note: Don't use "devrqworker" in production. Use the "rqworker" command instead
    # "devrqworker" reloads automatically on code-changes and eats a lot of memory.
    # See https://github.com/rq/rq/issues/2 for details
    command: python manage.py devrqworker high default low # listening on all three queues by default
    pull_policy: build

  kas-db:
    # Do not set `user` here
    container_name: kas-db
    image: postgres:13
    env_file:
      - ./dev-environment/kas.env
    networks:
      - database
    volumes:
      - kas-postgres-data:/var/lib/postgresql/data
      - ./dev-environment/postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql

  redis:
    container_name: redis
    image: redis:6.0
    networks:
      - worker

  kas-selvbetjening:
    user: "1000:1000"  # Override in docker-compose.override.yml if your local user is different
    container_name: kas-selvbetjening
    build:
      context: .
      dockerfile: docker/Dockerfile.selvbetjening
    depends_on:
      - kas-db
    ports:
      - "8021:8000"
    networks:
      - default
      - database
    env_file:
      - ./dev-environment/selvbetjening.env
    volumes:
      - ./selvbetjening:/app
      - ./dev-environment/cert:/ssl:ro
    environment:
      - MAKE_MIGRATIONS=true
      - MIGRATE=true
    command: gunicorn -b 0.0.0.0:8000 project.wsgi:application --reload -w 1 --access-logfile - --error-logfile - --capture-output

  kas-idp:
    user: "1000:1000"  # Override in docker-compose.override.yml if your local user is different
    image: kenchan0130/simplesamlphp
    container_name: kas-idp
    ports:
      - "8022:8022"
    networks:
      - default
    environment:
      HTTP_PORT: 8022
      SIMPLESAMLPHP_SP_ENTITY_ID: http://kas-selvbetjening:8021/saml/metadata/
      SIMPLESAMLPHP_SP_ASSERTION_CONSUMER_SERVICE: http://kas-selvbetjening:8021/login/callback/
      SIMPLESAMLPHP_SP_SINGLE_LOGOUT_SERVICE: http://kas-selvbetjening:8021/logout/callback/
      SIMPLESAMLPHP_IDP_CERTIFICATE: /var/www/simplesamlphp/cert/selfsigned.crt
      SIMPLESAMLPHP_IDP_PRIVATEKEY: /var/www/simplesamlphp/cert/selfsigned.key

    volumes:
      - ./dev-environment/cert/idp/selfsigned.crt:/var/www/simplesamlphp/cert/server.crt:ro
      - ./dev-environment/cert/idp/selfsigned.key:/var/www/simplesamlphp/cert/server.pem:ro
      - ./dev-environment/idp/authsources.php:/var/www/simplesamlphp/config/authsources.php:ro
      - ./dev-environment/idp/saml20-sp-remote.php:/var/www/simplesamlphp/metadata/saml20-sp-remote.php:ro
      - ./dev-environment/idp/ports.conf:/etc/apache2/ports.conf:ro
      - ./dev-environment/idp/site.conf:/etc/apache2/sites-available/simplesamlphp.conf:ro

  kas-er:
    user: "1000:1000"  # Override in docker-compose.override.yml if your local user is different
    container_name: kas-er
    image: kas-er:latest
    build:
      context: .
      dockerfile: docker/Dockerfile.er
    depends_on:
      - kas-db
    env_file:
      - ./dev-environment/kas.env
    networks:
      - database
    volumes:
      - ./data/er:/doc

  kas-hosts-updater:
    container_name: kas-hosts-updater
    image: bash
    volumes:
      - ./dev-environment/hosts.sh:/hosts.sh:ro
      - /etc/hosts:/hosts:rw
    command: [ "bash", "/hosts.sh" ]


volumes:
  kas-postgres-data:

networks:
  default:
  database:
  worker:
